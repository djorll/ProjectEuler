# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
# 
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?


from time import time
start = time()


# fonction qui donne la liste des diviseurs de n (1 et n compris)

def diviseurs(n):
    diviseurs = []
    for i in range(1, int(n ** 0.5) + 1):
        quotient, reste = divmod(n, i)
        if reste == 0:
            if quotient >= i:
                diviseurs.append(i)
                if quotient > i:
                    diviseurs.append(n // i)
    return diviseurs


pyramide = 3
rang = 2
nombre_diviseurs = 0
while nombre_diviseurs < 500:
    # calcul de la nouvelle pyramide
    rang += 1
    pyramide += rang
    # calcul du nombre de diviseurs
    nombre_diviseurs = len(diviseurs(pyramide))

print(pyramide)
print("Temps : " + str(time() - start))
